{"version":3,"sources":["data/blogPosts.js","components/BlogList.js","components/BlogPost.js","components/MusicPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["blogPosts","id","title","date","summary","content","BlogList","_ref","onReadMore","React","createElement","className","map","post","key","onClick","BlogPost","onBack","split","paragraph","index","MusicPlayer","isPlaying","setIsPlaying","useState","currentSong","setCurrentSong","progress","setProgress","showPlaylist","setShowPlaylist","audioRef","useRef","songs","artist","src","cover","nextSong","next","length","useEffect","setTimeout","current","play","prevSong","prev","togglePlay","pause","e","width","target","clientWidth","clickX","nativeEvent","offsetX","duration","currentTime","style","togglePlaylist","song","selectSong","ref","onTimeUpdate","updateProgress","onEnded","handleSongEnd","App","selectedPost","setSelectedPost","activeSection","setActiveSection","setCurrentTime","Date","weather","setWeather","temp","condition","timer","setInterval","clearInterval","handleReadMore","postId","find","window","scrollTo","handleBackToBlogList","handleNavClick","section","backgroundStyle","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","position","top","left","right","bottom","backgroundColor","backdropFilter","WebkitBackdropFilter","zIndex","getHours","toString","padStart","getMinutes","getSeconds","getFullYear","getMonth","getDate","getDay","formatDate","href","rel","renderContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c3f51a4f.chunk.js","sourcesContent":["const blogPosts = [\n  {\n    id: 1,\n    title: \"我的第一篇日记\",\n    date: \"2024-06-01\",\n    summary: \"今天是我开始写日记的第一天...\",\n    content: `\n      今天是我开始写日记的第一天。我决定开始记录我的日常生活和想法，\n      这样可以帮助我更好地整理思绪，也能在未来回顾我的成长历程。\n      \n      今天的天气很好，我花了一些时间在公园里散步，思考了一些关于未来的计划。\n      我希望能够在接下来的几个月里提升我的编程技能，特别是在React方面。\n    `\n  },\n  {\n    id: 2,\n    title: \"学习React的进展\",\n    date: \"2024-06-05\",\n    summary: \"分享我学习React的一些心得体会...\",\n    content: `\n      今天我深入学习了React的Hooks功能，特别是useEffect和useState。\n      这些功能真的很强大，让我能够更容易地管理组件状态和副作用。\n      \n      我还尝试了使用Context API来管理全局状态，这比我之前使用的方法要简洁得多。\n      明天我计划学习如何使用React Router来实现页面导航。\n    `\n  },\n  {\n    id: 3,\n    title: \"周末项目反思\",\n    date: \"2024-06-10\",\n    summary: \"回顾我这个周末完成的个人项目...\",\n    content: `\n      这个周末我花了很多时间在我的个人网站项目上。我添加了一个博客功能，\n      这让我可以分享我的想法和学习经验。\n      \n      实现这个功能的过程中遇到了一些挑战，特别是在设计数据结构和组件层次方面。\n      但最终我找到了一个我满意的解决方案。\n      \n      下一步，我想添加一个评论功能，让访问者可以与我互动。\n    `\n  }\n];\n\nexport default blogPosts; ","import React from 'react';\nimport blogPosts from '../data/blogPosts';\nimport './BlogList.css';\n\nfunction BlogList({ onReadMore }) {\n  return (\n    <div className=\"blog-list\">\n      <h2>我的日记</h2>\n      <div className=\"blog-posts\">\n        {blogPosts.map(post => (\n          <div key={post.id} className=\"blog-post\">\n            <h3>{post.title}</h3>\n            <div className=\"post-date\">{post.date}</div>\n            <p className=\"post-summary\">{post.summary}</p>\n            <button \n              className=\"read-more\" \n              onClick={() => onReadMore(post.id)}\n            >\n              阅读全文\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BlogList; ","import React from 'react';\nimport './BlogPost.css';\n\nfunction BlogPost({ post, onBack }) {\n  if (!post) return null;\n  \n  return (\n    <div className=\"blog-post-detail\">\n      <button className=\"back-button\" onClick={onBack}>返回</button>\n      <h2>{post.title}</h2>\n      <div className=\"post-date\">{post.date}</div>\n      <div className=\"post-content\">\n        {post.content.split('\\n\\n').map((paragraph, index) => (\n          <p key={index}>{paragraph}</p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BlogPost; ","import React, { useState, useRef, useEffect } from 'react';\nimport './MusicPlayer.css';\n\nfunction MusicPlayer() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSong, setCurrentSong] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [showPlaylist, setShowPlaylist] = useState(false);\n  const audioRef = useRef(null);\n  \n  // 歌曲列表\n  const songs = [\n    {\n      title: \"In The End\",\n      artist: \"Linkin Park\",\n      src: \"https://music.163.com/song/media/outer/url?id=4153366.mp3\", // 示例链接\n      cover: \"https://p1.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg\"\n    },\n    {\n      title: \"Numb\",\n      artist: \"Linkin Park\",\n      src: \"https://music.163.com/song/media/outer/url?id=4153366.mp3\", // 示例链接\n      cover: \"https://p1.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg\"\n    },\n    {\n      title: \"Faint\",\n      artist: \"Linkin Park\",\n      src: \"https://music.163.com/song/media/outer/url?id=4153366.mp3\", // 示例链接\n      cover: \"https://p1.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg\"\n    }\n  ];\n\n  // 播放/暂停切换\n  const togglePlay = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // 下一首歌\n  const nextSong = () => {\n    const next = (currentSong + 1) % songs.length;\n    setCurrentSong(next);\n    setProgress(0);\n  };\n\n  // 上一首歌\n  const prevSong = () => {\n    const prev = (currentSong - 1 + songs.length) % songs.length;\n    setCurrentSong(prev);\n    setProgress(0);\n  };\n\n  // 更新进度条\n  const updateProgress = () => {\n    const { currentTime, duration } = audioRef.current;\n    if (duration) {\n      setProgress((currentTime / duration) * 100);\n    }\n  };\n\n  // 设置进度\n  const setAudioProgress = (e) => {\n    const width = e.target.clientWidth;\n    const clickX = e.nativeEvent.offsetX;\n    const duration = audioRef.current.duration;\n    \n    audioRef.current.currentTime = (clickX / width) * duration;\n  };\n\n  // 当歌曲结束时自动播放下一首\n  const handleSongEnd = () => {\n    nextSong();\n    setTimeout(() => {\n      audioRef.current.play();\n    }, 100);\n  };\n\n  // 当currentSong改变时，如果正在播放，则继续播放新歌曲\n  useEffect(() => {\n    if (isPlaying) {\n      setTimeout(() => {\n        audioRef.current.play();\n      }, 100);\n    }\n  }, [currentSong, isPlaying]);\n\n  // 切换播放列表显示\n  const togglePlaylist = () => {\n    setShowPlaylist(!showPlaylist);\n  };\n\n  // 选择歌曲\n  const selectSong = (index) => {\n    setCurrentSong(index);\n    setProgress(0);\n    setShowPlaylist(false);\n    setTimeout(() => {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }, 100);\n  };\n\n  return (\n    <div className=\"music-player-container\">\n      <div className=\"music-player-main\">\n        <div className=\"player-controls\">\n          <button className=\"control-btn\" onClick={prevSong}>\n            <span className=\"control-icon\">⏮</span>\n          </button>\n          <button className=\"control-btn play-btn\" onClick={togglePlay}>\n            <span className=\"control-icon\">{isPlaying ? \"⏸\" : \"▶\"}</span>\n          </button>\n          <button className=\"control-btn\" onClick={nextSong}>\n            <span className=\"control-icon\">⏭</span>\n          </button>\n        </div>\n        \n        <div className=\"player-info\">\n          <div className=\"song-details\">\n            <div className=\"song-title\">{songs[currentSong].title}</div>\n            <div className=\"song-artist\">{songs[currentSong].artist}</div>\n          </div>\n          \n          <div className=\"progress-container\" onClick={setAudioProgress}>\n            <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\n          </div>\n        </div>\n        \n        <button className=\"playlist-toggle\" onClick={togglePlaylist}>\n          <span className=\"playlist-icon\">🎵</span>\n        </button>\n      </div>\n      \n      {showPlaylist && (\n        <div className=\"music-playlist\">\n          <h3>播放列表</h3>\n          <ul>\n            {songs.map((song, index) => (\n              <li \n                key={index} \n                className={index === currentSong ? 'active' : ''}\n                onClick={() => selectSong(index)}\n              >\n                <div className=\"playlist-song-title\">{song.title}</div>\n                <div className=\"playlist-song-artist\">{song.artist}</div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      \n      <audio\n        ref={audioRef}\n        src={songs[currentSong].src}\n        onTimeUpdate={updateProgress}\n        onEnded={handleSongEnd}\n      ></audio>\n    </div>\n  );\n}\n\nexport default MusicPlayer; ","import React, { useState, useEffect } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport BlogList from './components/BlogList';\nimport BlogPost from './components/BlogPost';\nimport MusicPlayer from './components/MusicPlayer';\nimport blogPosts from './data/blogPosts';\n\nfunction App() {\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [activeSection, setActiveSection] = useState('about'); // 默认显示\"关于我\"\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [weather, setWeather] = useState({ temp: '26°C- 31°C', condition: '晴' });\n  \n  // 更新时间\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, []);\n  \n  const handleReadMore = (postId) => {\n    const post = blogPosts.find(post => post.id === postId);\n    setSelectedPost(post);\n    window.scrollTo(0, 0);\n  };\n  \n  const handleBackToBlogList = () => {\n    setSelectedPost(null);\n    setActiveSection('blog');\n  };\n\n  // 导航菜单点击处理\n  const handleNavClick = (section) => {\n    setActiveSection(section);\n    setSelectedPost(null);\n  };\n\n  // 格式化时间\n  const formatTime = (date) => {\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n  };\n  \n  // 格式化日期\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    const weekday = ['日', '一', '二', '三', '四', '五', '六'][date.getDay()];\n    return `${year} 年 ${month} 月 ${day} 日 星期${weekday}`;\n  };\n\n  // 渲染内容区域\n  const renderContent = () => {\n    if (selectedPost) {\n      return <BlogPost post={selectedPost} onBack={handleBackToBlogList} />;\n    }\n\n    switch (activeSection) {\n      case 'about':\n        return (\n          <section className=\"content-section glass-effect\">\n            <div className=\"section-header\">\n              <h2>关于我</h2>\n              <div className=\"section-line\"></div>\n            </div>\n            <div className=\"section-content\">\n              <p>我是一名热爱技术的开发者，对Web开发和新技术充满热情。</p>\n              <p>我擅长使用React构建现代化的Web应用程序。</p>\n              <div className=\"quote-container\">\n                <blockquote>\n                  \"Hello World!\"\n                  <footer>—— 一个建立于 21 世纪的小站，存活于互联网的边缘</footer>\n                </blockquote>\n              </div>\n            </div>\n          </section>\n        );\n      case 'blog':\n        return (\n          <section className=\"content-section glass-effect\">\n            <BlogList onReadMore={handleReadMore} />\n          </section>\n        );\n      case 'reading':\n        return (\n          <section className=\"content-section glass-effect\">\n            <div className=\"section-header\">\n              <h2>阅读</h2>\n              <div className=\"section-line\"></div>\n            </div>\n            <div className=\"reading-list\">\n              <div className=\"reading-item\">\n                <div className=\"reading-icon\">📚</div>\n                <div className=\"reading-content\">\n                  <h3>《深入理解React》</h3>\n                  <p>这本书详细讲解了React的工作原理和最佳实践。</p>\n                </div>\n              </div>\n              <div className=\"reading-item\">\n                <div className=\"reading-icon\">📚</div>\n                <div className=\"reading-content\">\n                  <h3>《JavaScript高级程序设计》</h3>\n                  <p>这是一本JavaScript经典教程，涵盖了从基础到高级的各种主题。</p>\n                </div>\n              </div>\n            </div>\n          </section>\n        );\n      case 'projects':\n        return (\n          <section className=\"content-section glass-effect\">\n            <div className=\"section-header\">\n              <h2>我的项目</h2>\n              <div className=\"section-line\"></div>\n            </div>\n            <div className=\"projects-grid\">\n              <div className=\"project-card\">\n                <div className=\"project-icon\">💻</div>\n                <h3>个人网站</h3>\n                <p>使用React开发的个人网站，展示我的作品和想法。</p>\n                <div className=\"project-tags\">\n                  <span className=\"tag\">React</span>\n                  <span className=\"tag\">CSS3</span>\n                </div>\n              </div>\n              <div className=\"project-card\">\n                <div className=\"project-icon\">🎵</div>\n                <h3>音乐播放器</h3>\n                <p>一个简洁的在线音乐播放器，支持播放列表和音乐可视化。</p>\n                <div className=\"project-tags\">\n                  <span className=\"tag\">JavaScript</span>\n                  <span className=\"tag\">Web Audio API</span>\n                </div>\n              </div>\n            </div>\n          </section>\n        );\n      case 'contact':\n        return (\n          <section className=\"content-section glass-effect\">\n            <div className=\"section-header\">\n              <h2>联系我</h2>\n              <div className=\"section-line\"></div>\n            </div>\n            <div className=\"contact-info\">\n              <div className=\"contact-item\">\n                <div className=\"contact-icon\">📧</div>\n                <div className=\"contact-detail\">\n                  <h3>邮箱</h3>\n                  <p>your.email@example.com</p>\n                </div>\n              </div>\n              <div className=\"contact-item\">\n                <div className=\"contact-icon\">🌐</div>\n                <div className=\"contact-detail\">\n                  <h3>GitHub</h3>\n                  <p><a href=\"https://github.com/你的用户名\" target=\"_blank\" rel=\"noopener noreferrer\">github.com/你的用户名</a></p>\n                </div>\n              </div>\n            </div>\n          </section>\n        );\n      default:\n        return <div>内容不存在</div>;\n    }\n  };\n\n  // 使用本地背景图片\n  const backgroundImage = `${process.env.PUBLIC_URL}/images/背景.png`;\n  \n  // 背景样式，包含虚化效果\n  const backgroundStyle = {\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundAttachment: 'fixed',\n    position: 'relative',\n  };\n\n  // 虚化遮罩层样式\n  const overlayStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)', // 降低透明度，让背景更明显\n    backdropFilter: 'blur(5px)', // 减少虚化强度\n    WebkitBackdropFilter: 'blur(5px)', // Safari 支持\n    zIndex: -1,\n  };\n\n  return (\n    <div className=\"app-container\" style={backgroundStyle}>\n      {/* 虚化遮罩层 */}\n      <div style={overlayStyle}></div>\n      \n      <div className=\"decoration decoration-1\"></div>\n      <div className=\"decoration decoration-2\"></div>\n      \n      <header className=\"app-header\">\n        <h1 className=\"site-title\">我的个人网站</h1>\n        <p className=\"site-subtitle\">欢迎来到我的个人空间</p>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      </header>\n      \n      <div className=\"main-container\">\n        <div className=\"top-widgets\">\n          <div className=\"widget clock-widget glass-effect\">\n            <div className=\"digital-clock\">{formatTime(currentTime)}</div>\n            <div className=\"date-display\">{formatDate(currentTime)}</div>\n            <div className=\"weather-info\">\n              <span className=\"weather-location\">地球</span>\n              <span className=\"weather-condition\">{weather.condition}</span>\n              <span className=\"weather-temp\">{weather.temp}</span>\n            </div>\n          </div>\n          \n          <div className=\"widget music-widget glass-effect\">\n            <MusicPlayer />\n          </div>\n        </div>\n        \n        <div className=\"content-container\">\n          <nav className=\"site-nav glass-effect\">\n            <div className=\"nav-profile\">\n              <div className=\"profile-avatar\">\n                {/* 你可以在这里添加你的头像 */}\n                <div className=\"avatar-placeholder\">头像</div>\n              </div>\n              <h3 className=\"profile-name\">你的名字</h3>\n              <p className=\"profile-title\">前端开发者 / 博主</p>\n            </div>\n            \n            <ul className=\"nav-links\">\n              <li className={activeSection === 'about' ? 'active' : ''}>\n                <button onClick={() => handleNavClick('about')}>\n                  <span className=\"nav-icon\">🏠</span>\n                  <span className=\"nav-text\">关于我</span>\n                </button>\n              </li>\n              <li className={activeSection === 'blog' ? 'active' : ''}>\n                <button onClick={() => handleNavClick('blog')}>\n                  <span className=\"nav-icon\">📝</span>\n                  <span className=\"nav-text\">思考</span>\n                </button>\n              </li>\n              <li className={activeSection === 'reading' ? 'active' : ''}>\n                <button onClick={() => handleNavClick('reading')}>\n                  <span className=\"nav-icon\">📚</span>\n                  <span className=\"nav-text\">阅读</span>\n                </button>\n              </li>\n              <li className={activeSection === 'projects' ? 'active' : ''}>\n                <button onClick={() => handleNavClick('projects')}>\n                  <span className=\"nav-icon\">💻</span>\n                  <span className=\"nav-text\">项目</span>\n                </button>\n              </li>\n              <li className={activeSection === 'contact' ? 'active' : ''}>\n                <button onClick={() => handleNavClick('contact')}>\n                  <span className=\"nav-icon\">📞</span>\n                  <span className=\"nav-text\">联系我</span>\n                </button>\n              </li>\n            </ul>\n            \n            <div className=\"social-links\">\n              <a href=\"https://github.com/你的用户名\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link\">\n                <span className=\"social-icon\">GitHub</span>\n              </a>\n              <a href=\"https://weibo.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link\">\n                <span className=\"social-icon\">微博</span>\n              </a>\n              <a href=\"https://zhihu.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-link\">\n                <span className=\"social-icon\">知乎</span>\n              </a>\n            </div>\n          </nav>\n          \n          <main className=\"main-content\">\n            {renderContent()}\n          </main>\n        </div>\n      </div>\n      \n      <footer className=\"app-footer glass-effect\">\n        <p>&copy; 2024 我的个人网站 - 版权所有</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}